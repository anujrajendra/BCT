package com.bct.addon.dxch.path;

import com.orchestranetworks.schema.*;

/**
 * Generated by TIBCO EBX(R) 1214:0002, at 2023/03/22 23:14:01 [CET].
 * WARNING: Any manual changes to this class may be overwritten by generation process.
 * DO NOT MODIFY THIS CLASS.
 * 
 * This interface defines constants related to schema [Module: dxchng, path: /WEB-INF/ebx/schemas/dxchng.xsd].
 * 
 * Root paths in this interface: 
 * 	'/root'   relativeToRoot: false
 * 
 */
public interface DXchngPath
{
	// ===============================================
	// Constants for nodes under '/root'.
	// Prefix:  ''.
	// Statistics:
	//		64 path constants.
	//		23 leaf nodes.
	public static final Path _Root = Path.parse("/root");

	// Table type path
	public final class _DatabaseDataSource
	{
		private static final Path _DatabaseDataSource = _Root.add("DatabaseDataSource");
		public static Path getPathInSchema()
		{
			return _DatabaseDataSource;
		}
		public static final Path _Code = Path.parse("./code");
		public static final Path _Name = Path.parse("./name");
		public static final Path _Url = Path.parse("./url");
		public static final Path _Authentication = Path.parse("./authentication");
		public static final Path _User = Path.parse("./user");
		public static final Path _Password = Path.parse("./password");
		public static final Path _AccessKey = Path.parse("./accessKey");
	} 
	// Table type path
	public final class _DataSourceTable
	{
		private static final Path _DataSourceTable = _Root.add("DataSourceTable");
		public static Path getPathInSchema()
		{
			return _DataSourceTable;
		}
		public static final Path _TableID = Path.parse("./tableID");
		public static final Path _TableName = Path.parse("./tableName");
		public static final Path _Database = Path.parse("./database");
		public static final Path _XsdScehma = Path.parse("./xsdScehma");
	} 

	// Table type path
	public final class _ColumnsSpecifications
	{
		private static final Path _ColumnsSpecifications = _Root.add("ColumnsSpecifications");
		public static Path getPathInSchema()
		{
			return _ColumnsSpecifications;
		}
		public static final Path _Name = Path.parse("./name");
		public static final Path _ColumnType = Path.parse("./columnType");
		public static final Path _ColumnSize = Path.parse("./columnSize");
		public static final Path _Nullable = Path.parse("./nullable");
		public static final Path _Table = Path.parse("./table");
		public static final Path _ColumnDefaultValue = Path.parse("./columnDefaultValue");
		public static final Path _IsPrimaryKey = Path.parse("./isPrimaryKey");
		public static final Path _DecimalDigits = Path.parse("./decimalDigits");
		public static final Path _ColumnIndex = Path.parse("./columnIndex");
		public static final Path _ColumnDescription = Path.parse("./columnDescription");
	} 

	// Table type path
	public final class _DataTypeLookup
	{
		private static final Path _DataTypeLookup = _Root.add("DataTypeLookup");
		public static Path getPathInSchema()
		{
			return _DataTypeLookup;
		}
		public static final Path _Name = Path.parse("./name");
		public static final Path _DataTypeDescription = Path.parse("./dataTypeDescription");
	} 
	// ===============================================

}
